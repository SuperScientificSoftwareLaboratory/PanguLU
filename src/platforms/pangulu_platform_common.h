// Warning : Don't modify this file directly.
// This file is automatically generated by build_helper.py.
// This file will be regenerated after the next compilation.
// All changes will be lost.
#ifndef PANGULU_PLATFORM_HELPER
#define PANGULU_PLATFORM_HELPER
#include "01_SHAREDMEM/00_CPU/000_CPU/pangulu_platform_0100000.h"
#include "02_NONSHAREDMEM/01_GPU/000_CUDA/pangulu_platform_0201000.h"
typedef unsigned long long pangulu_platform_t;
#define PANGULU_PLATFORM_CPU_NAIVE 0x0100000
#define PANGULU_PLATFORM_GPU_CUDA 0x0201000
void pangulu_platform_malloc(void** platform_address, size_t size, pangulu_platform_t platform);
void pangulu_platform_malloc_pinned(void** platform_address, size_t size, pangulu_platform_t platform);
void pangulu_platform_synchronize(pangulu_platform_t platform);
void pangulu_platform_memset(void* s, int c, size_t n, pangulu_platform_t platform);
void pangulu_platform_create_stream(void** stream, pangulu_platform_t platform);
void pangulu_platform_memcpy(void *dst, const void *src, size_t count, unsigned int kind, pangulu_platform_t platform);
void pangulu_platform_memcpy_async(void *dst, const void *src, size_t count, unsigned int kind, void* stream, pangulu_platform_t platform);
void pangulu_platform_free(void* devptr, pangulu_platform_t platform);
void pangulu_platform_get_device_num(int* device_num, pangulu_platform_t platform);
void pangulu_platform_set_default_device(int device_num, pangulu_platform_t platform);
void pangulu_platform_get_device_name(char* name, int device_num, pangulu_platform_t platform);
void pangulu_platform_get_device_memory_usage(size_t* used_byte, pangulu_platform_t platform);
void pangulu_platform_getrf(pangulu_inblock_idx nb, pangulu_storage_slot_t* opdst, int tid, pangulu_platform_t platform);
void pangulu_platform_tstrf(pangulu_inblock_idx nb, pangulu_storage_slot_t* opdst, pangulu_storage_slot_t* opdiag, int tid, pangulu_platform_t platform);
void pangulu_platform_gessm(pangulu_inblock_idx nb, pangulu_storage_slot_t* opdst, pangulu_storage_slot_t* opdiag, int tid, pangulu_platform_t platform);
void pangulu_platform_ssssm(pangulu_inblock_idx nb, pangulu_storage_slot_t* opdst, pangulu_storage_slot_t* op1, pangulu_storage_slot_t* op2, int tid, pangulu_platform_t platform);
void pangulu_platform_ssssm_batched(pangulu_inblock_idx nb, pangulu_uint64_t ntask, pangulu_task_t* tasks, pangulu_platform_t platform);
void pangulu_platform_hybrid_batched(pangulu_inblock_idx nb, pangulu_uint64_t ntask, pangulu_task_t* tasks, pangulu_platform_t platform);
void pangulu_platform_spmv(pangulu_inblock_idx nb, pangulu_storage_slot_t* a, calculate_type* x, calculate_type* y, pangulu_platform_t platform);
void pangulu_platform_vecadd(pangulu_int64_t length, calculate_type *bval, calculate_type *xval, pangulu_platform_t platform);
void pangulu_platform_sptrsv(pangulu_inblock_idx nb, pangulu_storage_slot_t *s, calculate_type* xval, pangulu_int64_t uplo, pangulu_platform_t platform);
#endif
